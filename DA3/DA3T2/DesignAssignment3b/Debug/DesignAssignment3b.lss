
DesignAssignment3b.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000248  2**0
                  ALLOC, LOAD, DATA
  1 .text         0000010e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  00000248  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  00000277  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000285  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000bce  00000000  00000000  000002ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008e9  00000000  00000000  00000e7b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000282  00000000  00000000  00001764  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000050  00000000  00000000  000019e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000318  00000000  00000000  00001a38  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000056  00000000  00000000  00001d50  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001da6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  000001a6  000001a6  0000023a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001dc0  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.__vector_33 00000050  0000010e  0000010e  000001a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.main    00000032  0000015e  0000015e  000001f2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .bss.timer3_count 00000002  00800100  00800100  00000248  2**0
                  ALLOC
 17 .text.__dummy_fini 00000002  000001ae  000001ae  00000242  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.__dummy_funcs_on_exit 00000002  000001b0  000001b0  00000244  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.__dummy_simulator_exit 00000002  000001b2  000001b2  00000246  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.exit    00000016  00000190  00000190  00000224  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text._Exit   00000004  000001aa  000001aa  0000023e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5d 00 	jmp	0xba	; 0xba <__ctors_end>
   4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
   8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
   c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  10:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  14:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  18:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  1c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  20:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  24:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  28:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  2c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  30:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  34:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  38:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  3c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  40:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  44:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  48:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  4c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  50:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  54:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  58:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  5c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  60:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  64:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  68:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  6c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  70:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  74:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  78:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  7c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  80:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  84:	0c 94 87 00 	jmp	0x10e	; 0x10e <_etext>
  88:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  8c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  90:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  94:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  98:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  9c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  a0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  a4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  a8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  ac:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  b0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>

000000b4 <.dinit>:
  b4:	01 00       	.word	0x0001	; ????
  b6:	01 02       	muls	r16, r17
  b8:	80 00       	.word	0x0080	; ????

000000ba <__ctors_end>:
  ba:	11 24       	eor	r1, r1
  bc:	1f be       	out	0x3f, r1	; 63
  be:	cf ef       	ldi	r28, 0xFF	; 255
  c0:	d8 e0       	ldi	r29, 0x08	; 8
  c2:	de bf       	out	0x3e, r29	; 62
  c4:	cd bf       	out	0x3d, r28	; 61

000000c6 <__do_copy_data>:
  c6:	e4 eb       	ldi	r30, 0xB4	; 180
  c8:	f0 e0       	ldi	r31, 0x00	; 0
  ca:	40 e0       	ldi	r20, 0x00	; 0
  cc:	17 c0       	rjmp	.+46     	; 0xfc <__do_clear_bss+0x8>
  ce:	b5 91       	lpm	r27, Z+
  d0:	a5 91       	lpm	r26, Z+
  d2:	35 91       	lpm	r19, Z+
  d4:	25 91       	lpm	r18, Z+
  d6:	05 91       	lpm	r16, Z+
  d8:	07 fd       	sbrc	r16, 7
  da:	0c c0       	rjmp	.+24     	; 0xf4 <__do_clear_bss>
  dc:	95 91       	lpm	r25, Z+
  de:	85 91       	lpm	r24, Z+
  e0:	ef 01       	movw	r28, r30
  e2:	f9 2f       	mov	r31, r25
  e4:	e8 2f       	mov	r30, r24
  e6:	05 90       	lpm	r0, Z+
  e8:	0d 92       	st	X+, r0
  ea:	a2 17       	cp	r26, r18
  ec:	b3 07       	cpc	r27, r19
  ee:	d9 f7       	brne	.-10     	; 0xe6 <__do_copy_data+0x20>
  f0:	fe 01       	movw	r30, r28
  f2:	04 c0       	rjmp	.+8      	; 0xfc <__do_clear_bss+0x8>

000000f4 <__do_clear_bss>:
  f4:	1d 92       	st	X+, r1
  f6:	a2 17       	cp	r26, r18
  f8:	b3 07       	cpc	r27, r19
  fa:	e1 f7       	brne	.-8      	; 0xf4 <__do_clear_bss>
  fc:	e9 3b       	cpi	r30, 0xB9	; 185
  fe:	f4 07       	cpc	r31, r20
 100:	31 f7       	brne	.-52     	; 0xce <__do_copy_data+0x8>
 102:	0e 94 af 00 	call	0x15e	; 0x15e <main>
 106:	0c 94 c8 00 	jmp	0x190	; 0x190 <exit>

0000010a <_exit>:
 10a:	f8 94       	cli

0000010c <__stop_program>:
 10c:	ff cf       	rjmp	.-2      	; 0x10c <__stop_program>

Disassembly of section .text:

000001a6 <__bad_interrupt>:
 1a6:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.__vector_33:

0000010e <__vector_33>:

volatile uint16_t timer3_count = 0;
#define TIMER3_MAX_COUNT 8000 // 2 sec delay

ISR(TIMER3_COMPA_vect)
{
 10e:	1f 92       	push	r1
 110:	0f 92       	push	r0
 112:	0f b6       	in	r0, 0x3f	; 63
 114:	0f 92       	push	r0
 116:	11 24       	eor	r1, r1
 118:	2f 93       	push	r18
 11a:	8f 93       	push	r24
 11c:	9f 93       	push	r25
	timer3_count++;
 11e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 122:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 126:	01 96       	adiw	r24, 0x01	; 1
 128:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 12c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	if (timer3_count >= TIMER3_MAX_COUNT)
 130:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 134:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 138:	80 34       	cpi	r24, 0x40	; 64
 13a:	9f 41       	sbci	r25, 0x1F	; 31
 13c:	40 f0       	brcs	.+16     	; 0x14e <__vector_33+0x40>
	{
		PORTB ^= (1 << PINB4); // Toggle LED
 13e:	95 b1       	in	r25, 0x05	; 5
 140:	80 e1       	ldi	r24, 0x10	; 16
 142:	89 27       	eor	r24, r25
 144:	85 b9       	out	0x05, r24	; 5
		timer3_count = 0;
 146:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 14a:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
	}
}
 14e:	9f 91       	pop	r25
 150:	8f 91       	pop	r24
 152:	2f 91       	pop	r18
 154:	0f 90       	pop	r0
 156:	0f be       	out	0x3f, r0	; 63
 158:	0f 90       	pop	r0
 15a:	1f 90       	pop	r1
 15c:	18 95       	reti

Disassembly of section .text.main:

0000015e <main>:

int main(void)
{
	DDRB |= (1 << PINB4); // Set PB4 as LED output
 15e:	84 b1       	in	r24, 0x04	; 4
 160:	80 61       	ori	r24, 0x10	; 16
 162:	84 b9       	out	0x04, r24	; 4
	
	// Configure Timer3 for CTC mode
	TCCR3A = 0; // Normal operation
 164:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7f8090>
	TCCR3B = (1 << WGM32); // CTC mode
 168:	e1 e9       	ldi	r30, 0x91	; 145
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	88 e0       	ldi	r24, 0x08	; 8
 16e:	80 83       	st	Z, r24
	
	OCR3A = 499; // Prescaler set to 8, 500 ticks needed
 170:	83 ef       	ldi	r24, 0xF3	; 243
 172:	91 e0       	ldi	r25, 0x01	; 1
 174:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7f8099>
 178:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7f8098>
	TCCR3B |= (1 << CS31); // Start Timer3, prescaler = 8
 17c:	80 81       	ld	r24, Z
 17e:	82 60       	ori	r24, 0x02	; 2
 180:	80 83       	st	Z, r24
	
	TIMSK3 |= (1 << OCIE3A); // Enable Timer3 compare
 182:	e1 e7       	ldi	r30, 0x71	; 113
 184:	f0 e0       	ldi	r31, 0x00	; 0
 186:	80 81       	ld	r24, Z
 188:	82 60       	ori	r24, 0x02	; 2
 18a:	80 83       	st	Z, r24
	
	sei(); // Enable global interrupts
 18c:	78 94       	sei
 18e:	ff cf       	rjmp	.-2      	; 0x18e <main+0x30>

Disassembly of section .text.__dummy_fini:

000001ae <_fini>:
 1ae:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

000001b0 <__funcs_on_exit>:
 1b0:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

000001b2 <__simulator_exit>:
 1b2:	08 95       	ret

Disassembly of section .text.exit:

00000190 <exit>:
 190:	ec 01       	movw	r28, r24
 192:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <__funcs_on_exit>
 196:	0e 94 d7 00 	call	0x1ae	; 0x1ae <_fini>
 19a:	ce 01       	movw	r24, r28
 19c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <__simulator_exit>
 1a0:	ce 01       	movw	r24, r28
 1a2:	0e 94 d5 00 	call	0x1aa	; 0x1aa <_Exit>

Disassembly of section .text._Exit:

000001aa <_Exit>:
 1aa:	0e 94 85 00 	call	0x10a	; 0x10a <_exit>
