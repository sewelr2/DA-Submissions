
DesignAssignment2_Task3C.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000210  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000cc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  00000210  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  0000023f  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  0000024d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c7f  00000000  00000000  0000027d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000976  00000000  00000000  00000efc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002fa  00000000  00000000  00001872  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000094  00000000  00000000  00001b6c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000318  00000000  00000000  00001c00  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000151  00000000  00000000  00001f18  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  00002069  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  0000018e  0000018e  00000202  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000208c  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.delay_150ms 00000014  0000017a  0000017a  000001ee  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.main    0000002a  0000013a  0000013a  000001ae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.__vector_1 0000006e  000000cc  000000cc  00000140  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.__dummy_fini 00000002  00000196  00000196  0000020a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.__dummy_funcs_on_exit 00000002  00000198  00000198  0000020c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.__dummy_simulator_exit 00000002  0000019a  0000019a  0000020e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.exit    00000016  00000164  00000164  000001d8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text._Exit   00000004  00000192  00000192  00000206  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 66 00 	jmp	0xcc	; 0xcc <_etext>
   8:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
   c:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  10:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  14:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  18:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  1c:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  20:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  24:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  28:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  2c:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  30:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  34:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  38:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  3c:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  40:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  44:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  48:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  4c:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  50:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  54:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  58:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  5c:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  60:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  64:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  68:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  6c:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  70:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  74:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  78:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  7c:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  80:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  84:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  88:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  8c:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  90:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  94:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  98:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  9c:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  a0:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  a4:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  a8:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  ac:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  b0:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61
  c0:	0e 94 9d 00 	call	0x13a	; 0x13a <main>
  c4:	0c 94 b2 00 	jmp	0x164	; 0x164 <exit>

000000c8 <_exit>:
  c8:	f8 94       	cli

000000ca <__stop_program>:
  ca:	ff cf       	rjmp	.-2      	; 0xca <__stop_program>

Disassembly of section .text:

0000018e <__bad_interrupt>:
 18e:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.delay_150ms:

0000017a <delay_150ms>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 17a:	2f ef       	ldi	r18, 0xFF	; 255
 17c:	82 e5       	ldi	r24, 0x52	; 82
 17e:	97 e0       	ldi	r25, 0x07	; 7
 180:	21 50       	subi	r18, 0x01	; 1
 182:	80 40       	sbci	r24, 0x00	; 0
 184:	90 40       	sbci	r25, 0x00	; 0
 186:	e1 f7       	brne	.-8      	; 0x180 <delay_150ms+0x6>
 188:	00 c0       	rjmp	.+0      	; 0x18a <delay_150ms+0x10>
 18a:	00 00       	nop
 18c:	08 95       	ret

Disassembly of section .text.main:

0000013a <main>:
	_delay_ms(150);
}

int main(void)
{
	DDRB |= (1 << 5); // Set PB5 as output
 13a:	84 b1       	in	r24, 0x04	; 4
 13c:	80 62       	ori	r24, 0x20	; 32
 13e:	84 b9       	out	0x04, r24	; 4
	PORTB |= (1 << 5); // LED initially off
 140:	85 b1       	in	r24, 0x05	; 5
 142:	80 62       	ori	r24, 0x20	; 32
 144:	85 b9       	out	0x05, r24	; 5
	
	DDRD &= (0 << 2); // Set PD2 as input
 146:	8a b1       	in	r24, 0x0a	; 10
 148:	1a b8       	out	0x0a, r1	; 10
	PORTD |= (1 << 2); // Enable PD2 pull-up
 14a:	8b b1       	in	r24, 0x0b	; 11
 14c:	84 60       	ori	r24, 0x04	; 4
 14e:	8b b9       	out	0x0b, r24	; 11
	
	// Configure INT0 interrupt
	EICRA |= (1 << ISC01) | (1 << ISC00); // Trigger on rising edge
 150:	e9 e6       	ldi	r30, 0x69	; 105
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	80 81       	ld	r24, Z
 156:	83 60       	ori	r24, 0x03	; 3
 158:	80 83       	st	Z, r24
	EIMSK |= (1 << INT0); // Enable INT0
 15a:	8d b3       	in	r24, 0x1d	; 29
 15c:	81 60       	ori	r24, 0x01	; 1
 15e:	8d bb       	out	0x1d, r24	; 29
	
	sei(); // Enable global interrupts
 160:	78 94       	sei
 162:	ff cf       	rjmp	.-2      	; 0x162 <main+0x28>

Disassembly of section .text.__vector_1:

000000cc <__vector_1>:
	
	return 0;
}

ISR(INT0_vect)
{
  cc:	1f 92       	push	r1
  ce:	0f 92       	push	r0
  d0:	0f b6       	in	r0, 0x3f	; 63
  d2:	0f 92       	push	r0
  d4:	11 24       	eor	r1, r1
  d6:	2f 93       	push	r18
  d8:	3f 93       	push	r19
  da:	4f 93       	push	r20
  dc:	5f 93       	push	r21
  de:	6f 93       	push	r22
  e0:	7f 93       	push	r23
  e2:	8f 93       	push	r24
  e4:	9f 93       	push	r25
  e6:	af 93       	push	r26
  e8:	bf 93       	push	r27
  ea:	cf 93       	push	r28
  ec:	df 93       	push	r29
  ee:	ef 93       	push	r30
  f0:	ff 93       	push	r31
	PORTB ^= (1 << 5); // Turn on PB5 LED
  f2:	95 b1       	in	r25, 0x05	; 5
  f4:	80 e2       	ldi	r24, 0x20	; 32
  f6:	89 27       	eor	r24, r25
  f8:	85 b9       	out	0x05, r24	; 5
	// Loop 150ms delay subroutine 20 times for 3 sec delay
	for(int i = 0; i < 20; i++) // Loop 20 times
  fa:	c0 e0       	ldi	r28, 0x00	; 0
  fc:	d0 e0       	ldi	r29, 0x00	; 0
  fe:	03 c0       	rjmp	.+6      	; 0x106 <__vector_1+0x3a>
	{
		delay_150ms(); // Call 150ms delay subroutine
 100:	0e 94 bd 00 	call	0x17a	; 0x17a <delay_150ms>

ISR(INT0_vect)
{
	PORTB ^= (1 << 5); // Turn on PB5 LED
	// Loop 150ms delay subroutine 20 times for 3 sec delay
	for(int i = 0; i < 20; i++) // Loop 20 times
 104:	21 96       	adiw	r28, 0x01	; 1
 106:	c4 31       	cpi	r28, 0x14	; 20
 108:	d1 05       	cpc	r29, r1
 10a:	d4 f3       	brlt	.-12     	; 0x100 <__vector_1+0x34>
	{
		delay_150ms(); // Call 150ms delay subroutine
	}
	PORTB ^= (1 << 5); // Turn off LED
 10c:	95 b1       	in	r25, 0x05	; 5
 10e:	80 e2       	ldi	r24, 0x20	; 32
 110:	89 27       	eor	r24, r25
 112:	85 b9       	out	0x05, r24	; 5
}
 114:	ff 91       	pop	r31
 116:	ef 91       	pop	r30
 118:	df 91       	pop	r29
 11a:	cf 91       	pop	r28
 11c:	bf 91       	pop	r27
 11e:	af 91       	pop	r26
 120:	9f 91       	pop	r25
 122:	8f 91       	pop	r24
 124:	7f 91       	pop	r23
 126:	6f 91       	pop	r22
 128:	5f 91       	pop	r21
 12a:	4f 91       	pop	r20
 12c:	3f 91       	pop	r19
 12e:	2f 91       	pop	r18
 130:	0f 90       	pop	r0
 132:	0f be       	out	0x3f, r0	; 63
 134:	0f 90       	pop	r0
 136:	1f 90       	pop	r1
 138:	18 95       	reti

Disassembly of section .text.__dummy_fini:

00000196 <_fini>:
 196:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000198 <__funcs_on_exit>:
 198:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

0000019a <__simulator_exit>:
 19a:	08 95       	ret

Disassembly of section .text.exit:

00000164 <exit>:
 164:	ec 01       	movw	r28, r24
 166:	0e 94 cc 00 	call	0x198	; 0x198 <__funcs_on_exit>
 16a:	0e 94 cb 00 	call	0x196	; 0x196 <_fini>
 16e:	ce 01       	movw	r24, r28
 170:	0e 94 cd 00 	call	0x19a	; 0x19a <__simulator_exit>
 174:	ce 01       	movw	r24, r28
 176:	0e 94 c9 00 	call	0x192	; 0x192 <_Exit>

Disassembly of section .text._Exit:

00000192 <_Exit>:
 192:	0e 94 64 00 	call	0xc8	; 0xc8 <_exit>
