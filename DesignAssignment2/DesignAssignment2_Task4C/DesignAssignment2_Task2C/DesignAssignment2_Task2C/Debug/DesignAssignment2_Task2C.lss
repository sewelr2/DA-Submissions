
DesignAssignment2_Task2C.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001b6  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000cc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  000001b6  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  000001e5  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  000001f3  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c75  00000000  00000000  0000021b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000095e  00000000  00000000  00000e90  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002d8  00000000  00000000  000017ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00001ac8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000318  00000000  00000000  00001afc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000006c  00000000  00000000  00001e14  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001e80  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000134  00000134  000001a8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001e98  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.delay_150ms 00000014  00000120  00000120  00000194  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.main    0000003e  000000cc  000000cc  00000140  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.__dummy_fini 00000002  0000013c  0000013c  000001b0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.__dummy_funcs_on_exit 00000002  0000013e  0000013e  000001b2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.__dummy_simulator_exit 00000002  00000140  00000140  000001b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.exit    00000016  0000010a  0000010a  0000017e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text._Exit   00000004  00000138  00000138  000001ac  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
   8:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
   c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  10:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  14:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  18:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  1c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  20:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  24:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  28:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  2c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  30:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  34:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  38:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  3c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  40:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  44:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  48:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  4c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  50:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  54:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  58:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  5c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  60:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  64:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  68:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  6c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  70:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  74:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  78:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  7c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  80:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  84:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  88:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  8c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  90:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  94:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  98:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  9c:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  a0:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  a4:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  a8:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  ac:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>
  b0:	0c 94 9a 00 	jmp	0x134	; 0x134 <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61
  c0:	0e 94 66 00 	call	0xcc	; 0xcc <_etext>
  c4:	0c 94 85 00 	jmp	0x10a	; 0x10a <exit>

000000c8 <_exit>:
  c8:	f8 94       	cli

000000ca <__stop_program>:
  ca:	ff cf       	rjmp	.-2      	; 0xca <__stop_program>

Disassembly of section .text:

00000134 <__bad_interrupt>:
 134:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.delay_150ms:

00000120 <delay_150ms>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 120:	2f ef       	ldi	r18, 0xFF	; 255
 122:	82 e5       	ldi	r24, 0x52	; 82
 124:	97 e0       	ldi	r25, 0x07	; 7
 126:	21 50       	subi	r18, 0x01	; 1
 128:	80 40       	sbci	r24, 0x00	; 0
 12a:	90 40       	sbci	r25, 0x00	; 0
 12c:	e1 f7       	brne	.-8      	; 0x126 <delay_150ms+0x6>
 12e:	00 c0       	rjmp	.+0      	; 0x130 <delay_150ms+0x10>
 130:	00 00       	nop
 132:	08 95       	ret

Disassembly of section .text.main:

000000cc <main>:
	_delay_ms(150);
}

int main(void)
{
	DDRB |= (1 << 5); // Set PB5 as output
  cc:	84 b1       	in	r24, 0x04	; 4
  ce:	80 62       	ori	r24, 0x20	; 32
  d0:	84 b9       	out	0x04, r24	; 4
	PORTB |= (1 << 5); // LED initially off
  d2:	85 b1       	in	r24, 0x05	; 5
  d4:	80 62       	ori	r24, 0x20	; 32
  d6:	85 b9       	out	0x05, r24	; 5
	
	DDRC &= (0 << 1); // Set PC1 as input
  d8:	87 b1       	in	r24, 0x07	; 7
  da:	17 b8       	out	0x07, r1	; 7
	PORTC |= (1 << 1); // Enable PC1 pull-up resistor
  dc:	88 b1       	in	r24, 0x08	; 8
  de:	82 60       	ori	r24, 0x02	; 2
  e0:	88 b9       	out	0x08, r24	; 8
	
	while(1)
	{
		// Poll for switch press (active low)
		if(!(PINC & (1 << PINC1))) // Check for PC1 input
  e2:	31 99       	sbic	0x06, 1	; 6
  e4:	fe cf       	rjmp	.-4      	; 0xe2 <main+0x16>
		{
			PORTB ^= (1 << 5); // Turn on LED at PB5
  e6:	95 b1       	in	r25, 0x05	; 5
  e8:	80 e2       	ldi	r24, 0x20	; 32
  ea:	89 27       	eor	r24, r25
  ec:	85 b9       	out	0x05, r24	; 5
			// Loop 150ms delay subroutine 10 times for 1.5 sec delay
			for (int i = 0; i < 10; i++) // Loop 10 times
  ee:	c0 e0       	ldi	r28, 0x00	; 0
  f0:	d0 e0       	ldi	r29, 0x00	; 0
  f2:	03 c0       	rjmp	.+6      	; 0xfa <main+0x2e>
			{
				delay_150ms(); // Call 150ms delay function
  f4:	0e 94 90 00 	call	0x120	; 0x120 <delay_150ms>
		// Poll for switch press (active low)
		if(!(PINC & (1 << PINC1))) // Check for PC1 input
		{
			PORTB ^= (1 << 5); // Turn on LED at PB5
			// Loop 150ms delay subroutine 10 times for 1.5 sec delay
			for (int i = 0; i < 10; i++) // Loop 10 times
  f8:	21 96       	adiw	r28, 0x01	; 1
  fa:	ca 30       	cpi	r28, 0x0A	; 10
  fc:	d1 05       	cpc	r29, r1
  fe:	d4 f3       	brlt	.-12     	; 0xf4 <main+0x28>
			{
				delay_150ms(); // Call 150ms delay function
			}
			PORTB ^= (1 << 5); // Turn off LED
 100:	95 b1       	in	r25, 0x05	; 5
 102:	80 e2       	ldi	r24, 0x20	; 32
 104:	89 27       	eor	r24, r25
 106:	85 b9       	out	0x05, r24	; 5
 108:	ec cf       	rjmp	.-40     	; 0xe2 <main+0x16>

Disassembly of section .text.__dummy_fini:

0000013c <_fini>:
 13c:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

0000013e <__funcs_on_exit>:
 13e:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000140 <__simulator_exit>:
 140:	08 95       	ret

Disassembly of section .text.exit:

0000010a <exit>:
 10a:	ec 01       	movw	r28, r24
 10c:	0e 94 9f 00 	call	0x13e	; 0x13e <__funcs_on_exit>
 110:	0e 94 9e 00 	call	0x13c	; 0x13c <_fini>
 114:	ce 01       	movw	r24, r28
 116:	0e 94 a0 00 	call	0x140	; 0x140 <__simulator_exit>
 11a:	ce 01       	movw	r24, r28
 11c:	0e 94 9c 00 	call	0x138	; 0x138 <_Exit>

Disassembly of section .text._Exit:

00000138 <_Exit>:
 138:	0e 94 64 00 	call	0xc8	; 0xc8 <_exit>
